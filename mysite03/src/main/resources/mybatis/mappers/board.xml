<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">
	<select id="count" parameterType="string" resultType="integer">
		<choose>
			<when test="_parameter == null or _parameter == ''">
				<![CDATA[
					select count(*) from board
				]]>
			</when>
			<otherwise>
				<![CDATA[
					select count(*) 
					from board 
					where (title like '%${_parameter }%' or contents like '%{_parameter }')
				]]>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert" parameterType="boardVo">
		<choose>
			<when test="groupNo == null">
				<![CDATA[
					insert into board 
					values(null, #{userId}, #{title}, #{contents}, 0, now(), 
							(ifnull((select max(g_no) from board as sub_board), 0)+1), 1, 0)
				]]>
			</when>
			<otherwise>
				<![CDATA[
					insert into board 
					values(null,
						   #{userId}, 
						   #{title},
						   #{contents}, 
						   0, 
						   now(), 
						   #{groupNo}, 
						   #{orderNo}+1, 
						   #{depth}+1)
				]]>
			</otherwise>
		</choose>
		<selectKey keyProperty="id" resultType="Long" order="AFTER">
			<![CDATA[
				select last_insert_id() from dual
			]]>
		</selectKey>
	</insert>
	
	<update id="update" parameterType="boardVo">
		<![CDATA[
			update board 
			set title = #{title}, contents = #{contents} 
			where id = #{id} and user_id = #{userId}
		]]>
	</update>
	
	<update id="updateHit" parameterType="long">
		<![CDATA[
			update board 
			set hit = hit + 1 
			where id = #{id}
		]]>
	</update>
	
	<update id="updateOrderNo" parameterType="boardVo">
		<![CDATA[
			update board 
			set o_no = o_no + 1 
			where g_no = #{groupNo} and o_no > #{orderNo}
		]]>
	</update>
	
	<delete id="delete" parameterType="map">
		<![CDATA[
			delete from board where id = #{id} and user_id = #{userId}
		]]>
	</delete>
	
	<select id="findById" parameterType="long" resultType="boardVo">
		<![CDATA[
			select board.id,
				   board.user_id as userId, 
				   user.name as userName, 
				   title, 
				   contents, 
				   hit, 
				   g_no as groupNo, 
				   o_no as orderNo, 
				   depth 
			from board 
			join user on board.user_id = user.id 
			where board.id = #{id}
		]]>
	</select>
	
	<select id="findByIdAndUserId" parameterType="map" resultType="boardVo">
		<![CDATA[
			select board.id,
				   title, 
				   user.name, 
				   contents, 
				   hit, 
				   g_no as groupNo,
				   o_no as orderNo, 
				   depth 
			from board 
			join user on board.user_id = user.id 
			where board.id = #{id} and user.id = #{userId}
		]]>
	</select>
	
	<select id="findAllByKeyword" parameterType="map" resultType="boardVo">
		<choose>
			<when test="keyword == null or keyword == ''">
				<![CDATA[
					select board.id,
						   user.id as userId, 
						   user.name as userName, 
						   title, 
						   contents, 
						   hit, 
						   date_format(reg_date, '%Y-%m-%d %p %h:%i:%s') as regDate, 
						   depth
					from board 
					join user on board.user_id = user.id 
					order by g_no desc, o_no asc 
					limit #{boardSize} offset #{offset}
				]]>
			</when>
			<otherwise>
				<![CDATA[
					select board.id, 
						   user.id as userId, 
						   user.name as userName, 
						   title, 
						   contents, 
						   hit, 
						   date_format(reg_date, '%Y-%m-%d %p %h:%i:%s') as regDate, 
						   depth 
					from board 
					join user on board.user_id = user.id
					where (title like '%${keyword}%' or contents like '%${keyword}%')
					order by g_no desc, o_no asc 
					limit #{boardSize} offset #{offset}
				]]>
			</otherwise>
		</choose>
	</select>
</mapper>
